# This playbook fully setups DFS for the final milestone
# Version 0.1

- name: Add DFS's to the domain
  hosts: dfs01,dfs02
  vars:
    ansible_user: "{{ dfs01_local_user }}"
    ansible_shell_type: powershell
  tasks:
  - name: Change dfs dns to point to domain controllers
    ansible.windows.win_dns_client:
      adapter_names: 'Ethernet*'
      dns_servers:
      - 172.16.1.12
      - 172.16.1.13

  - name: Add dfs to Domain
    ansible.windows.win_domain_membership:
      dns_domain_name: tortoise.local
      domain_admin_user: "{{ domain_admin_1_user }}@tortoise.local"
      domain_admin_password: "{{ domain_admin_1_password }}"
      state: domain
    register: host_restart
    

  - name: Reboot
    ansible.windows.win_reboot:
    when: host_restart.reboot_required

# Setup DFS systems
- name: Install features and setup shared folders on DFS systems
  hosts: dfs01,dfs02
  vars:
    ansible_user: "Administrator@tortoise.local"
    ansible_shell_type: powershell
  tasks:
  - name: Install needed features on DFS the systems
    ansible.windows.win_feature:
      name:
      - FS-FileServer
      - FS-DFS-Replication
      state: present

  - name: Create dfs01 shared folder
    ansible.windows.win_shell: New-Item 'c:\dfs01' -ItemType Directory; New-SMBShare -Name dfs01 -Path 'c:\dfs01' -FullAccess "tortoise\Domain Admins" -ReadAccess "tortoise\Domain Users"
    when: ansible_hostname == 'dfs01'

  - name: Create dfs02 shared folder
    ansible.windows.win_shell: New-Item 'c:\dfs02' -ItemType Directory; New-SMBShare -Name dfs02 -Path 'c:\dfs02' -FullAccess "tortoise\Domain Admins" -ReadAccess "tortoise\Domain Users"
    when: ansible_hostname == 'dfs02'

# Setup Namespace
- name: Setup Namespace and replication
  hosts: mgmt01
  vars:
    ansible_user: "Administrator@tortoise.local"
    ansible_shell_type: powershell
  tasks:
  - name: Install needed roles on MGMT01
    ansible.windows.win_feature:
      name:
      - FS-DFS-Namespace
      - FS-DFS-Replication
      - RSAT-DFS-Mgmt-Con
      include_management_tools: yes
      state: present
  
  - name: Add the DFSDsc module
    community.windows.win_psmodule:
      name: DFSDsc
      state: present
  
# path is namespace path,domain, targetpath is individual share path,loca
  - name: Configure namespace 'shell_share' root
    ansible.windows.win_dsc:
      resource_name: DFSNamespaceRoot
      Path: '\\MGMT01\shell_share'
      TargetPath:  'C:\DFSRoots\shell_share'
      Ensure: 'Present'
      Type: 'DomainV2' 
  
  - name: Configure namespace 'shell_share' folder 'user_info'
    ansible.windows.win_dsc:
      resource_name: DFSNamespaceFolder
      Path: '\\MGMT01\shell_share\user_info'
      TargetPath: 'C:\DFSRoots\shell_share\user_info'
      Ensure: 'Present'

  - name: Configure a replication group for 'shell_share'
    ansible.windows.win_dsc:
      resource_name: DFSReplicationGroup
      GroupName: 'shell_share_synch'
      Ensure: 'Present'
      Members: 'dfs01''dfs02'
      Folders: 'shell_share'
      Topology: 'Fullmesh'
      DomainName: 'tortoise.local'
  
  - name: Configure a replication folder for shell_share
    ansible.windows.win_dsc:
      resource_name: DFSReplicationGroupFolder
      GroupName: 'shell_share_synch'
      FolderName: 'shell_share'
      DfsnPath: '\\MGMT01\shell_share'

  - name: Configure replication membership for 'dfs01'
    ansible.windows.win_dsc:
      resource_name: DFSReplicationGroupMembership
      GroupName: 'shell_share_synch'
      FolderName: 'shell_share'
      ComputerName: 'dfs01'
      ContentPath: 'C:\dfs01'
      PrimaryMember: $true

  - name: Configure replication membership for 'dfs02'
    ansible.windows.win_dsc:
      resource_name: DFSReplicationGroupMembership
      GroupName: 'shell_share_synch'
      FolderName: 'shell_share'
      ComputerName: 'dfs02'
      ContentPath: 'C:\dfs02'