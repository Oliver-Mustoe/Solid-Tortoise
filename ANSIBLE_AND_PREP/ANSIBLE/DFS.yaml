# This playbook fully setups DFS for the final milestone
# Version 0.1

- name: Add DFS's to the domain
  hosts: dfs01,dfs02
  vars:
    ansible_user: "{{ dfs_local_user }}"
    ansible_shell_type: powershell
  tasks:
  - name: Change dfs dns to point to domain controllers
    ansible.windows.win_dns_client:
      adapter_names: 'Ethernet*'
      dns_servers:
      - 172.16.1.12
      - 172.16.1.13

  - name: Add dfs to Domain
    ansible.windows.win_domain_membership:
      dns_domain_name: tortoise.local
      domain_admin_user: "{{ domain_admin_1_user }}@tortoise.local"
      domain_admin_password: "{{ domain_admin_1_password }}"
      state: domain
    register: host_restart
    
  - name: Reboot
    ansible.windows.win_reboot:
    when: host_restart.reboot_required

# Setup DFS systems
- name: Install features and setup shared folders on DFS systems
  hosts: dfs01,dfs02
  vars:
    ansible_user: "Administrator@tortoise.local"
    ansible_shell_type: powershell
  tasks:
  - name: Install needed features on DFS the systems
    ansible.windows.win_feature:
      name:
      - FS-FileServer
      - FS-DFS-Replication
      state: present

  - name: Create dfs01 shared folder
    ansible.windows.win_shell: New-Item 'c:\dfs01_user' -ItemType Directory; New-SMBShare -Name dfs01 -Path 'c:\dfs01_user' -FullAccess "tortoise\Domain Admins" -ReadAccess "tortoise\Domain Users"
    when: ansible_hostname == 'dfs01'

  - name: Create dfs02 shared folder
    ansible.windows.win_shell: New-Item 'c:\dfs02_user' -ItemType Directory; New-SMBShare -Name dfs02 -Path 'c:\dfs02_user' -FullAccess "tortoise\Domain Admins" -ReadAccess "tortoise\Domain Users"
    when: ansible_hostname == 'dfs02'

# Setup Namespace
- name: Setup Namespace and replication
  hosts: mgmt01
  vars:
    ansible_user: "Administrator@tortoise.local"
    ansible_shell_type: powershell
  tasks:
  - name: Install needed roles on MGMT01
    ansible.windows.win_feature:
      name:
      - FS-DFS-Namespace
      - FS-DFS-Replication
      - RSAT-DFS-Mgmt-Con
      include_management_tools: yes
      state: present
  
# path is namespace path,domain, targetpath is individual share path,local
  - name: Create namespace 'shell_share' & create a replication group 'shell_share-sync'
    ansible.windows.win_shell: |
      New-DFsnRoot -TargetPath "C:\DFSRoots\shell_share" -Type DomainV2 -Path "\\MGMT01\shell_share"
      New-DfsnFolder -Path "\\MGMT01\shell_share\user_info"
      New-DfsnFolderTarget -Path "\\MGMT01\shell_share\user_info" -TargetPath "\\dfs01\dfs01_user"
      New-DfsnFolderTarget -Path "\\MGMT01\shell_share\user_info" -TargetPath "\\dfs02\dfs02_user"
      New-DfsReplicationGroup -GroupName "shell_share_user_sync" | Set-DfsReplicatedFolder -FolderName "user_info" | Add-DfsrMember -ComputerName "mgmt01","dfs01","dfs02"
      Add-DfsrConnection -GroupName "shell_share_user_sync" -SourceComputerName "mgmt01" -DestinationComputerName "dfs01"
      Add-DfsrConnection -GroupName "shell_share_user_sync" -SourceComputerName "mgmt01" -DestinationComputerName "dfs02"
      Set-DfsrMembership -GroupName "shell_share_user_sync" -FolderName "user_info" -ContentPath "c:\dfs01_user" -ComputerName "dfs01" -PrimaryMember $True -StagingPathQuotaInMB 16384 -Force
      Set-DfsrMembership -GroupName "shell_share_user_sync" -FolderName "user_info" -ContentPath "c:\dfs02_user" -ComputerName "dfs02" -StagingPathQuotaInMB 16384 -Force
      Set-DfsrMembership -GroupName "shell_share_user_sync" -FolderName "user_info" -ContentPath "C:\DFSRoots\shell_share" -ComputerName "mgmt01" -StagingPathQuotaInMB 16384 -Force
